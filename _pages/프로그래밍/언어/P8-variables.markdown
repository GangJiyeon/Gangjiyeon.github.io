---

title:  "[python] 9. 파이썬 변수"
date:   2024-10-16
 tags:
    - 파이썬기초
thumbnail: "/assets/img/thumbnail/book.jpg"

---
이번에는 파이썬의 변수에 대해 알아보자



---

## **변수**
### **변수란 무엇일까?**
**1)변수**
* 자료형의 값을 저장하는 공간
* 객체를 가리키는 것(자료형의 데이터(값))

```py
# a, b, c를 변수라고 한다
a = 1
b = "python"
c = [1, 2, 3]
```

<br>

**2) 변수 선언하기**
* `=(assignment)` 기호를 사용
* `변수_이름 = 변수에_저장할_값`
* 파이썬은 변수에 저장된 값을 스스로 판단하여 자료형의 타입을 지정

<br>

**3) 변수와 메모리**
* 변수를 선언하면 
	* 객체가 자동으로 메모리에 생성
	* 변수는 객체가 저장된 메모리의 주소를 가리킴
* `id(변수)` : 변수가 가리키는 메모리 주소값 확인하기

> 메모리 : 컴퓨터가 프로그램에서 사용하는 데이터를 기억하는 공간


```py
a = [1, 2, 3]

# [1, 2, 3] 값을 가지는 리스트 데이터(객체)가 자동으로 메모리에 생성
# 변수 a는 [1, 2, 3] 리스트가 저장된 메모리의 주소를 가리킴

# 변수가 가리키는 메모리 주소 값 확인
id(a)	# 4303029896
```


<br>
<br>
<br>

---


## **변수의 복사**
### **변수를 복사할 떄**
* 변수를 변수에 대입 : 객체를 참조하는 변수가 늘어남 -> 동일한 변수가 됨
	* `id(변수)` 값 동일, `is` 명령어의 연산 결과가 `True`
	* 변수의 값이 바뀌면 다른 변수의 값도 같이 바뀜

```py
a = [1, 2, 3]
b = a

id(a)	# 4303029896
id(b)	# 4303029896

a is b  # True

a[1] = 4
a	# [1, 4, 3]
b	# [1, 4, 3]
```

<br>
<br>

### ** 변수의 값만 복사하는 방법**
**1) `[:]` 이용하기**

```py
a = [1, 2, 3]
b = a[:]
a[1] = 4 	# a = [1, 4, 3]
b			# b = [1, 2, 3]
```

<br>

**2) copy 모듈 이용하기**

```py
from copy import copy
a = [1, 2, 3]
b = copy(a)
b is a	# False

```

<br>

**3) copy 함수 사용하기**

다음처럼 리스트 자료형의 자체 함수인 copy 함수를 사용해도 copy 모듈을 사용하는 것과 동일한 결과를 얻을 수 있다.

```python
>>> a = [1, 2, 3]
>>> b = a.copy()
>>> b is a
False

```

## 변수를 만드는 여러 가지 방법

**1) 여러 개의 변수에 값 대입**

```py
# 튜플
a, b = ('python', 'life')
(a, b) = 'python', 'life'

# 리스트
[a, b] = ['python', 'life']		# a == 'python', b == 'life'

# 하나의 값을 두 개 이상의 변수에 넣기
a = b = 'python'

```

<br>

**2) 두 변수의 값 바꾸기**

```python
a = 3
b = 5
a, b = b, a		# a == 5, b == 3
```

