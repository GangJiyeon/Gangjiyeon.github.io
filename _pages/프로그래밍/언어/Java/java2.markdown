---
title: "[Java] 자바 기초 총정리 2 - 변수"
tags:
    - Java기초
date: "2025-03-17"
thumbnail: "/assets/img/thumbnail/book.jpg"
---

<br>

# **자바 변수의 종류**
---

자바에서 변수는 크게 `데이터 타입에 따른 구분`과 `선언 위치에 따른 구분`으로 2가지 기준에 따라 분류된다

> 데이터 타입에 따라: 기본형 변수, 참조형 변수
선언 위치에 따른 구분: 클래스변수, 인스턴스변수, 지역변수, 매개변수, 멤버변수

<br>

## **1. 기본형 변수 (Primitive Variable)**
- `int, double, char, boolean` 같은 기본 데이터 타입을 저장하는 변수
- **값 자체를 저장**하며, 크기가 고정됨 (4바이트, 8바이트 등)
- 스택(Stack) 메모리에 저장됨

```java
int num = 10;  // 기본형 변수
double pi = 3.14;
boolean isTrue = true;
```

<br>

## **2. 참조 변수 (Reference Variable)**
- 객체의 **메모리 주소를 저장하는 변수**
- 기본형 변수가 아닌 모든 변수 (`String`, 배열, 클래스 등)
- 힙(Heap) 메모리에 저장된 객체를 가리킴

```java
String name = "Java";  // 참조 변수 (name은 "Java"의 주소를 저장)
int[] numbers = {1, 2, 3};  // 배열도 참조 변수
Person p = new Person();  // 객체도 참조 변수
```

> `null`을 저장할 수도 있음 (주소가 없음)

```java
Person p = null;  // 참조 변수, 현재 어떤 객체도 가리키지 않음
```

<br>

## **3. 멤버 변수 (Member Variable)**
- 클래스 내부에서 선언된 변수
- **객체(인스턴스) 변수 + 클래스(static) 변수**를 포함하는 개념
- **클래스 내부에서 선언되지만, 메서드 내부에는 선언되지 않음**

```java
class Car {
    String brand;  // 멤버 변수 (인스턴스 변수)
    static int wheels = 4;  // 멤버 변수 (클래스 변수)
}
```

> **멤버 변수는 자동으로 기본값이 할당됨**  
(`int` → `0`, `boolean` → `false`, `String` → `null`)

<br>


## **4. 클래스 변수 (Static Variable)**
- `static` 키워드가 붙은 변수
- **객체에 속하지 않고 클래스 자체에 속함**
- 모든 객체가 **공유하는 변수** (한 번만 메모리에 저장됨)
- **프로그램 실행 시 자동으로 메모리에 할당됨 (Method 영역에 저장됨)**

> 

```java
class Student {
    static int totalStudents = 0;  // 클래스 변수 (공유됨)

    Student() {
        totalStudents++;  // 모든 객체가 같은 변수를 공유
    }
}
```

> `Student.totalStudents` 로 접근 가능 (객체를 생성하지 않아도 접근 가능)

<br>

## **5. 인스턴스 변수 (Instance Variable)**
- `new` 키워드로 객체를 생성할 때 **각 객체마다 별도로 할당되는 변수**
- 클래스 내부에서 선언되지만, `static`이 붙지 않음
- 객체가 생성될 때 힙(Heap) 메모리에 저장됨
- 객체마다 값을 가질 수 있음 (각 객체마다 독립적)

```java
class Person {
    String name;  // 인스턴스 변수 (객체마다 다름)
    int age;  // 인스턴스 변수
}
```

```java
Person p1 = new Person();
p1.name = "Alice";
p1.age = 25;

Person p2 = new Person();
p2.name = "Bob";
p2.age = 30;
```

> `p1.name`과 `p2.name`은 서로 다른 변수! (객체마다 별도로 존재)

<br>

## **6. 지역 변수 (Local Variable)**
- 메서드, 생성자, 또는 블록 `{}` 내부에서 선언된 변수
- 해당 블록이 실행될 때 생성되고, 블록이 종료되면 삭제됨 (스택에 저장)
- 반드시 **초기화 후 사용해야 함** (자동 초기화 없음)

```java
void myMethod() {
    int localVar = 10;  // 지역 변수 (이 블록에서만 사용 가능)
    System.out.println(localVar);
}
```

> `localVar`는 `myMethod()` 블록 안에서만 유효하고, 밖에서는 접근 불가

<br>

## **7. 매개 변수 (Parameter Variable)**
- **메서드의 인자로 전달되는 변수**
- 메서드가 호출될 때 생성되고, 호출이 끝나면 사라짐
- 메서드가 실행될 때 스택(Stack) 메모리에 저장됨

**예제**
```java
void greet(String name) {  // 매개변수 name
    System.out.println("Hello, " + name);
}
```

> `greet("Alice")`를 호출하면 `name = "Alice"`가 됨. 메서드 실행 후 사라짐

<br>
<br>
<br>

# 변수의 종류 요약!
---

<br>


## **변수의 저장 위치 (메모리 영역)**
자바 변수는 선언된 위치에 따라 메모리에서 **다른 영역**에 저장

|변수 종류|저장 위치|생성 시점|소멸 시점|
|:---:|:---:|:---:|:---:|
| **지역 변수** | 스택(Stack) | 메서드 실행 시 | 메서드 종료 시 |
| **매개 변수** | 스택(Stack) | 메서드 호출 시 | 메서드 종료 시 |
| **인스턴스 변수** | 힙(Heap) | 객체 생성 시 | 객체가 참조되지 않으면 GC에 의해 삭제 |
| **클래스 변수 (static)** | 메서드(Method) 영역 | 프로그램 실행 시 | 프로그램 종료 시 |

<br>

## **자바 변수 구분 요약**

|변수 종류| 선언 위치 | 저장 위치 | 소멸 시점 | 접근 방법 |
|:---:|:---:|:---:|:---:|:---:|
| **기본형 변수** | 어디서든 선언 가능 | 스택(Stack) | 블록 종료 시 | 직접 값 저장 |
| **참조 변수** | 어디서든 선언 가능 | 힙(Heap) 주소 저장 | GC 실행 시 | 객체 참조 |
| **멤버 변수** | 클래스 내부 | 힙(Heap) / 메서드 영역 | 객체 소멸 시 | `객체명.변수` |
| **클래스 변수** | `static` 붙은 변수 | 메서드(Method) 영역 | 프로그램 종료 시 | `클래스명.변수` |
| **인스턴스 변수** | `static` 없이 선언 | 힙(Heap) | 객체 소멸 시 | `객체명.변수` |
| **지역 변수** | 메서드 내부 | 스택(Stack) | 메서드 종료 시 | 직접 접근 가능 |
| **매개 변수** | 메서드의 인자 | 스택(Stack) | 메서드 종료 시 | 직접 접근 가능 |

<br>

## **정리**
- **기본형 변수** → 값 자체를 저장
- **참조 변수** → 객체의 주소를 저장
- **멤버 변수** → 클래스 내부 변수 (`static` O/X 포함)
- **클래스 변수 (static 변수)** → 모든 객체가 공유하는 변수
- **인스턴스 변수** → 객체별로 독립적인 변수
- **지역 변수** → 특정 블록 내에서만 유효한 변수
- **매개 변수** → 메서드 호출 시 전달되는 값
