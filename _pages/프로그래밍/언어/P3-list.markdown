---

title:  "[python] 3. 자료형 - 리스트 자료형"
date:   2024-10-10
 tags:
    - 파이썬기초
thumbnail: "/assets/img/thumbnail/book.jpg"

---
이번에는 파이썬의 자료형 중 리스트 자료형에 대해 알아보자



---
## **리스트 자료형**
### **리스트 자료형이란**
**1) 리스트 자료형** 👉 다른 언어의 배열이라 생각하면 됨!
* `[](대괄호)`로 감싸주고, 각 요소 값은 `,(쉼표)`로 구분
* 요솟값 : 비어있는 리스트, 문자열, 숫자, 리스트 자체, 숫자와 문자열 등 어떠한 자료형도 포함될 수 있음
* 중복, 수정, 삭제, 생성이 가능하고 순서가 있음
* 리스트 선언하기

```py
# 비어 있는 리스트 선언
a = list()
b = []

c = [1, 2, 3]
d = [c, "life", "is"] 
```

<br>
<br>

### **리스트 인덱싱과 슬라이싱**
**1) 리스트 인덱싱**

```py
a = [1, 2, 3]
b = [1, 2, 3, ['a', 'b', 'c']]
print(a[0], a[-1], b[3], b[-1][1])	# 1, 3, ['a', 'b', 'c'], 'b'

c = [1, 2, ['a', 'b', ['life', 'is']]]
print(c[2][2][0])	# 'life'
```

<br>

**2) 리스트 슬라이싱**
* 문자열에서 사용한 방법과 동일하다!

```py
a = [1, 2, 3, 4, 5]
print(a[0:3])		# [1, 2, 3]
print(a[:2])		# [1, 2]
print(a[2:])		# [3, 4, 5]

b = [1, 2, 3, ['a', 'b', 'c'], 4, 5]
print(a[2:5])	# [3, ['a', 'b', 'c'], 4]
print(a[3][:2])	# ['a', 'b']
```


<br>
<br>

### **리스트 연산**
**1) 리스트 더하기**

```py
a = [1, 2, 3]
b = [4, 5, 6]
print(a + b)	# [1, 2, 3, 4, 5, 6]
```

<br>

**2) 리스트 반복하기**

```py
a = [1, 2, 3]
print(a * 2)	# [1, 2, 3, 1, 2, 3]
```

<br>
<br>


### **리스트 길이 구하기**
* `len(리스트)` : 리스트 요소의 갯수가 반환된다
```py
a = [1, 2, 3]
len(a)	# 3
```

<br>
<br>


### **리스트 수정과 삭제**
**1) 리스트의 값 수정하기**

```py
a = [1, 2, 3]
a[2] = 4
print(a)	# [1, 2, 4)
```

<br>

**2) 리스트 요소 삭제하기**
* `del 객체`
> 객체 : 파이썬에서 사용되는 모든 자료형

```py
a = [1, 2, 3]
del a[1]
print(a)		# [1, 3]
```

<br>
<br>
<br>

---

## **리스트 관련 함수**
### **리스트 요소 추가**
**1) 리스트 끝에 요소를 추가하는 `append()` 함수**
* `리스트.append(추가할 요소)`
* 리스트의 제일 마지막에 추가할 요소 추가
* 어떠한 자료형이든 추가 가능

<br>

**2) 원하는 곳에 요소를 추가하는 `insert()` 함수**
* `리스트.insert(위치, 값)`
* 해당 인덱스 번호에 값 삽입

```py
a = [1, 2, 3]
a.insert(0, 4)
print(a)	# [4, 1, 2, 3]
a.insert(3, 5)
print(a)	# [4, 1, 2, 5, 3]
```

<br>
<br>

### **리스트 요소  제거**
**1) 처음 발견된 요소를 제거하는 `remove()`**
* `리스트.remove(제거할 값)`
* 처음 발견된 요소 제거

```py
a = [1, 2, 3, 4, 1, 2, 3]
a.remove(1)
print(a)	# [2, 3, 4, 1, 2, 3]
```


<br>

**2) 마지막 요소를 빼내는 `pop()`**
* `리스트.pop()`
* 리스트의 마지막 요소를 반환하고 해당 요소 삭제

```py
a = [1, 2, 3]
print(a.pop())	# 3
print(a)		# [1, 2]
```

<br>
<br>


### **리스트 순서 정리**
**1) 리스트 정렬 `sort()`**
* `리스트.sort()`
* 리스트의 요소를 순서대로 정렬
* 오름차순 정렬

```py
a = [1, 4, 3, 2]
a.sort()
print(a)	# [1, 2, 3, 4]

b = ['a', 'c', 'b']
b.sort()
print(b)	# ['a', 'b', 'c']
```

<br>

**2)	 리스트 뒤집기 `reverse()`**
* `리스트.reverse()`
* 현재 리스트를 역순으로 뒤집어 줌

```py
a = ['a', 'c', 'b']
a.reverse()
print(a)	# ['b', 'c', 'a']
```

<br>

**3) 리스트를 추가하는 `extend()`**
* `리스트.extend(추가할 리스트)`
* 원래 리스트에 추가할 리스트를 더해준다

```py
a = [1, 2, 3]
a.extend([4, 5])

print(a)	# [1, 2, 3, 4, 5]
```

<br>
<br>

### **인덱스 반환**
**1) 인덱스 반환 `index()`**
* `리스트.index(값)`
* 리스트에 찾는 값이 있으면 인덱스 번호 반환
* 리스트에 찾는 값이 없으면 오류 발생

<br>
<br>


### **요소 갯수 세기**
**1) 요소의 갯수를 세는 `count()`**
* `리스트.count(값)`
* 리스트 안에 존재하는 해당 값의 갯수를 반환

```py
a = [1, 2, 3, 1]
print(a.count(1))		# 2
```




